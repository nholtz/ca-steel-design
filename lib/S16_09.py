from math import pi, sqrt, ceil, log10
from utils import call

Shp_W = 1
Shp_WWF = 5
phi = 0.9

NOTES = []

def add_note(s,**kwargs):
    NOTES.append((s,kwargs))

def section_class(B,T,D,W,A,Cf=0.,Fy=350.,phi=phi):
    bovert = (B/2.0)/T
    fklass = 4
    for i,L in [(1,145.0), (2,170.0), (3,200.0)]:
        if bovert <= L/sqrt(Fy):
            fklass = i
            break

    hoverw = (D - 2.0*T)/W
    phiCy = phi*A*Fy*1E-3
    wklass = 4
    for i,L,S in [(1,1100.0,0.39),(2,1700.0,0.61), (3,1900.0,0.65)]:
        if hoverw <= (L/sqrt(Fy))*(1.0-S*Cf/phiCy):
            wklass = i
            break

    return (fklass,wklass,max(fklass,wklass))

def calcLu(B,T,D,W,A,Ix,Sx,Zx,Iy,J,Cw,E=200000.,G=77000.,Cf=0.,Fy=350.,phi=phi):

    fclass,wclass,sclass = call(section_class,locals())
    if wclass > 3:
        return 0.0

    Se = Sx
    if fclass == 4 and wclass < 4:
        bop = (B/2.0) - 200.0*T/sqrt(Fy)
        Se = (Ix - 4.0*bop*T*(D/2.0 - T/2.0)**2)/(D/2.0)

    if sclass in [1,2]:
        Mlim = Zx * Fy
    else:
        Mlim = Se * Fy

    w2 = 1.0
    P = E*Iy*G*J
    Q = Iy*Cw*(pi*E)**2
    Lu = 0.067416*w2**0.5*((103684.0*Mlim**2*Q+55516.5*w2**2*P**2)**0.5 + 235.619*w2*P)**0.5/Mlim
    return Lu

def calcMr(Shp,B,T,D,W,A,Ix,Sx,Zx,Iy,J,Cw,E=200000.,G=77000.,Cf=0.,Fy=350.,phi=phi,omega2=1.0,L=0.):

    if Shp not in [Shp_W,Shp_WWF]:
        raise Exception("Only W and WWF shapes are implemented.")

    fclass,wclass,sclass = call(section_class,locals())

    Se = Sx
    if fclass == 4:
        if wclass < 4:
            bop = (B/2.0) - 200.0*T/sqrt(Fy)
            Se = (Ix - 4.0*bop*T*(D/2.0 - T/2.0)**2)/(D/2.0)
            add_note( 'Class 4 flange: Se = %.3g by Clause 13.5(c)(iii).' % (Se,) )
        else:
            raise Exception("Flange and web are both class 4.")

    Mlim = Fy * (Zx if sclass in [1,2] else Se)
    P = E*Iy*G*J
    Q = Iy*Cw*(pi*E)**2
    # the following was generated by Maxima:
    w2 = 1.0
    Lu = 0.067416*w2**0.5*((103684.0*Mlim**2*Q+55516.5*w2**2*P**2)**0.5 + 235.619*w2*P)**0.5/Mlim

    if L <= 0.0:
        if sclass in [1,2]:
            Mp = Zx * Fy * 1.0E-6
            Mr = phi * Mp
        elif sclass in [3] or (fclass == 4 and wclass <= 3):
            My = Se * Fy * 1.0E-6
            Mr = phi * My
        else:
            add_note( 'Class 4 webs not implemented.' )
            Mr =  0.0
    else:
        Mu = (omega2*pi/L) * sqrt(P + Q/L**2) * 1.0E-6

        if sclass in [1,2]:
            Mp = Fy * Zx * 1.0E-6
            if Mu > 0.67*Mp:
                Mr = 1.15*phi*Mp*(1.0 - 0.28*Mp/Mu)
                Mr = min( Mr, phi*Mp )
            else:
                Mr = phi * Mu
        elif sclass in [3] or (fclass == 4 and wclass <= 3):
            My = Fy * Se * 1.0E-6
            if Mu > 0.67*My:
                Mr = 1.15*phi*My*(1.0 - 0.28*My/Mu)
                Mr = min( Mr, phi*My )
            else:
                Mr = phi * Mu
        else:
            add_note( 'Class 4 webs not implemented.' )
            Mr = 0.0

    return Lu,Mr
